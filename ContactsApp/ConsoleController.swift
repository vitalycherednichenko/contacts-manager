import Darwin
import Foundation

class ConsoleController {
    private let contactManager: ContactController
    private let menuView: MenuView
    private let messageView: MessageView
    private let consoleView: ConsoleView
    private let contactView: ContactView
    
    init() {
        self.menuView = MenuView()
        self.contactManager = ContactController()
        self.messageView = MessageView()
        self.consoleView = ConsoleView()
        self.contactView = ContactView()
    }
    
    func run() {
        program: while true {
            switch menuView.showMainMenu() {
            case "1": addContact()
            case "2": showContacts()
            case "6":
                messageView.displaySuccess("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è! üëã")
                break program
            default:
                messageView.displayError("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            }
        }
    }
    
    private func showContacts() {
        let contacts = contactManager.getAllContacts()
        contactView.showAllContacts(contacts)
    }
    
    private func addContact() {
        contactView.showCreateContact()
        
        guard let firstName = consoleView.inputString(prompt: "üë§ *–ò–º—è: ", required: true) else { return }
        
        guard let middlename = consoleView.inputString(prompt: "üë§ –û—Ç—á–µ—Å—Ç–≤–æ: ") else { return }
        
        guard let surname = consoleView.inputString(prompt: "üë§ *–§–∞–º–∏–ª–∏—è: ", required: true) else { return }
        
        guard let phone = consoleView.inputString(prompt: "üì± –¢–µ–ª–µ—Ñ–æ–Ω: ") else { return }
        
        guard let note = consoleView.inputString(prompt: "üìù –ó–∞–º–µ—Ç–∫–∞: ") else { return }
        
        let personalInfo = PersonalInfo(
            name: firstName,
            surname: surname,
            middlename: middlename
        )
        
        let additionalInfo = [
            "phone": phone,
            "note": note
        ]
        
        let contact = contactManager.createContact(
            personalInfo: personalInfo,
            additionalInfo: additionalInfo
        )
        
        messageView.displaySuccess("–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:", description: contact.toStr())
        
        messageView.displayInfo("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    }
}
